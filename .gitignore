# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# macOS
.DS_Store

# JetBrains
.idea/

# VisualStudioCode
.vscode/

# Data
data/

# Misc.
tmp/
temp/

.python-version
.DS_Store
.vscode
.gcloudignore

**/.terraform.lock.hcl
**/.terraform/
**/terraform.tfstate
**/terraform.tfstate.backup
**/application_default_credentials.json

dialogflow-cx/terraform/webhook
**/*.log
**/node_modules
.coverage
coverage
.nyc_output
docs/
out/
build/
system-test/secrets.js
system-test/*key.json
*.lock

# VPC-SC Auth Server
dialogflow-cx/vpc-sc-auth-server/application-client-id
dialogflow-cx/vpc-sc-auth-server/application-client-secret
dialogflow-cx/vpc-sc-auth-server/auth-server-project
dialogflow-cx/vpc-sc-auth-server/principal

# VPC-SC Demo:
dialogflow-cx/vpc-sc-demo/analytics-database
dialogflow-cx/vpc-sc-demo/terraform-plan-storage-bucket
dialogflow-cx/vpc-sc-demo/project-id
dialogflow-cx/vpc-sc-demo/principal
dialogflow-cx/vpc-sc-demo/backend/demo-server-key.json
dialogflow-cx/vpc-sc-demo/backend/public_key.pem
dialogflow-cx/vpc-sc-demo/backend/private_key.pem
dialogflow-cx/vpc-sc-demo/deploy/tmp
dialogflow-cx/vpc-sc-demo/deploy/.terraform
dialogflow-cx/vpc-sc-demo/deploy/.terraform.d
dialogflow-cx/vpc-sc-demo/deploy/.terraform.lock.hcl
