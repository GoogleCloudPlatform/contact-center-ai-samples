name: Dialogflow CX Webhook Python
on:
  push:
    branches: [main]
    paths:
      - "dialogflow-cx-webhook-python/**"
  pull_request:
    branches: [main]
    paths:
      - "dialogflow-cx-webhook-python/**"
permissions:
  id-token: write
jobs:
  setup_terraform_project:
    runs-on: ubuntu-latest
    steps:
      - name: Create run uuid
        id: build_id
        run: |-
          echo "::set-output name=id::$(date +%s)" > uuid.txt
          echo `cat uuid.txt`
      - name: Upload UUID
        uses: actions/upload-artifact@v1
        with:
          name: shared
          path: uuid.txt
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: nicain/contact-center-ai-samples
          token: ${{ secrets.ACCESS_TOKEN }}
      - id: 'auth'
        name: 'Authenticate to GCP'
        uses: 'google-github-actions/auth@v0'
        with:
            create_credentials_file: 'true'
            workload_identity_provider: 'projects/526597142092/locations/global/workloadIdentityPools/example-pool/providers/example-gh-provider'
            service_account: 'test-storage-sa@nicholascain-starter-project.iam.gserviceaccount.com'
      - name: Terraform Init/Apply
        run: |-
          cp "${{ steps.auth.outputs.credentials_file_path }}" terraform/application_default_credentials.json
          cp -r dialogflow-cx-webhook-python/webhook terraform
          docker run --env GOOGLE_APPLICATION_CREDENTIALS=/app/application_default_credentials.json -w /app -v $(pwd)/docker:/app hashicorp/terraform:1.1.7 init
          docker run --env GOOGLE_APPLICATION_CREDENTIALS=/app/application_default_credentials.json -w /app -v $(pwd)/docker:/app hashicorp/terraform:1.1.7 apply --auto-approve -var build_uuid=${BUILD_ID?}
        env:
          BUILD_ID: ${{ steps.build_id.outputs.id }}
  tests:
    needs: [setup_terraform_project]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: nicain/contact-center-ai-samples
        token: ${{ secrets.ACCESS_TOKEN }}
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}
    - name: Install requirements.txt
      run: |
        python -m pip install --upgrade pip
        pip install -r dialogflow-cx-webhook-python/requirements.txt
    - name: Install pylint
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analyze code with pylint
      run: |
        pylint $(git ls-files '*.py')
    - id: 'auth'
      name: 'Authenticate to GCP'
      uses: 'google-github-actions/auth@v0'
      with:
          create_credentials_file: 'true'
          workload_identity_provider: 'projects/526597142092/locations/global/workloadIdentityPools/example-pool/providers/example-gh-provider'
          service_account: 'test-storage-sa@nicholascain-starter-project.iam.gserviceaccount.com'
    - name: Dowload UUID
      uses: actions/download-artifact@v1
      with:
        name: shared
    - name: UUID to env
      id: build_id
      run: |-
        echo `cat shared/uuid.txt`
    - name: Run unit tests
      run: |
        python -m unittest discover dialogflow-cx-webhook-python -p '*_test.py'
      env:
        SVC_ACCOUNT_FILE: ${{ steps.auth.outputs.credentials_file_path }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        TEST_FUNCTION: webhook-test-${{ steps.build_id.outputs.id }}
  teardown_terraform_project:
    if: ${{ always() }}
    needs: [tests, setup_terraform_project]
    runs-on: ubuntu-latest
    steps:
    - name: Dowload UUID
      uses: actions/download-artifact@v1
      with:
        name: shared
    - name: UUID to env
      id: build_id
      run: |-
        echo `cat shared/uuid.txt`
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: nicain/contact-center-ai-samples
        token: ${{ secrets.ACCESS_TOKEN }}
    - id: 'auth'
      name: 'Authenticate to GCP'
      uses: 'google-github-actions/auth@v0'
      with:
          create_credentials_file: 'true'
          workload_identity_provider: 'projects/526597142092/locations/global/workloadIdentityPools/example-pool/providers/example-gh-provider'
          service_account: 'test-storage-sa@nicholascain-starter-project.iam.gserviceaccount.com'
    - name: Terraform Destroy
      if: always()
      run: |-
        cp "${{ steps.auth.outputs.credentials_file_path }}" terraform/application_default_credentials.json
        cp -r dialogflow-cx-webhook-python/webhook terraform
        docker run --env GOOGLE_APPLICATION_CREDENTIALS=/app/application_default_credentials.json -w /app -v $(pwd)/docker:/app hashicorp/terraform:1.1.7 init
        docker run --env GOOGLE_APPLICATION_CREDENTIALS=/app/application_default_credentials.json -w /app -v $(pwd)/docker:/app hashicorp/terraform:1.1.7 destroy --auto-approve -var build_uuid=${BUILD_ID?}
      env:
        BUILD_ID: ${{ steps.build_id.outputs.id }}
